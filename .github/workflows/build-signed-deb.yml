name: "Build Signed Debian Packages"

on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302

    - name: Install dependencies
      run: dotnet restore --force

    - name: Build Linux packages
      run: |
        BRANCH=$(git branch --show-current)
        if [ "${BRANCH:0:9}" = "releases/" ]; then
          SCALARVERSION="${BRANCH:9}".0
        else
          SCALARVERSION=0.3.132.0
        fi
        echo $SCALARVERSION
        dotnet publish -c Release -p:ScalarVersion=$SCALARVERSION 'Scalar.Packaging.Linux/Scalar.Packaging.Linux.csproj'

      # Because the actions/upload-artifact action does not allow you to specify
      # relative file paths we must first use a shell script to copy the
      # artifacts to a different directory.
    - name: Collect packages
      shell: bash
      run: |
        rm -rf to_upload
        mkdir to_upload
        cp ../out/Scalar.Packaging.Linux/deb/Release/*.deb    to_upload

    - name: Upload packages
      uses: actions/upload-artifact@v2
      with:
        name: DebianUnsigned
        path: to_upload/*

  sign:
    name: Sign
    runs-on: windows-latest
    needs: build
    steps:
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/checkout@v2

    - name: 'Download Unsigned Packages'
      uses: actions/download-artifact@v4.1.7
      with:
        name: DebianUnsigned
        path: tosign

    - uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Install ESRP Client'
      shell: pwsh
      env:
        AZ_SUB: ${{ secrets.AZURE_SUBSCRIPTION }}
      run: |
        az storage blob download --subscription  "$env:AZ_SUB" --account-name gitcitoolstore -c tools -n microsoft.esrpclient.1.2.47.nupkg -f esrp.zip
        Expand-Archive -Path esrp.zip -DestinationPath .\esrp

    - name: Install Certificates
      shell: pwsh
      env:
        AZ_SUB: ${{ secrets.AZURE_SUBSCRIPTION }}
        AZ_VAULT: ${{ secrets.AZURE_VAULT }}
        SSL_CERT: ${{ secrets.VAULT_SSL_CERT_NAME }}
        ESRP_CERT: ${{ secrets.VAULT_ESRP_CERT_NAME }}
      run: |
        az keyvault secret download --subscription "$env:AZ_SUB" --vault-name "$env:AZ_VAULT" --name "$env:SSL_CERT" -f out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx

        az keyvault secret download --subscription "$env:AZ_SUB" --vault-name "$env:AZ_VAULT" --name "$env:ESRP_CERT" -f out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx

    - name: Run ESRP Client
      shell: pwsh
      env:
        AZURE_AAD_ID: ${{ secrets.AZURE_AAD_ID }}
      run: |
        python .github/run_esrp_signing.py

    - name: Upload Signed Packages
      uses: actions/upload-artifact@v2
      with:
        name: DebianSigned
        path: |
          signed/*.deb

trigger: none

pr: none

variables:
  - group: apple-development
  - name: branchCounter
    value: $[counter(variables['Build.SourceBranch'], 0)]
  - name: configuration
    value: Release
  - name: signPool
    value: VSEng-MicroBuildVS2019
  - name: winImage
    value: windows-2019
  - name: osxImage
    value: macOS-10.14
  - name: 1ESFeedCredentials
    value: '1ESSharedAssets GVFS Feed [Publish]'

jobs:
  - job: win_build
    displayName: Windows Build and Unit Test
    pool:
      name: $(signPool)
    steps:
      - powershell: Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter) -VersionFileDirectory $(Build.ArtifactStagingDirectory)\versions
        displayName: "Compute product version"
      - task: PublishPipelineArtifact@1
        displayName: "Publish version files"
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)\versions
          artifactName: Versions
      - template: templates/win/build-and-unit-test.yml
      - template: templates/win/pack.signed.yml

  - job: osx_build_step1
    displayName: macOS Build and Unit Test
    pool:
      vmImage: $(osxImage)
    steps:
      - powershell: Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter)
        displayName: "Compute product version"
      - template: templates/osx/build-and-unit-test.yml
      - template: templates/osx/pack.signed/step1-layout.yml

  - job: osx_build_step2
    displayName: macOS Sign Binaries
    pool:
      name: $(signPool)
    dependsOn: osx_build_step1
    steps:
      - template: templates/osx/pack.signed/step2-signlayout.yml

  - job: osx_build_step3
    displayName: macOS Create Installer
    pool:
      vmImage: $(osxImage)
    dependsOn: osx_build_step2
    steps:
      - powershell: Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter)
        displayName: "Compute product version"
      - template: templates/osx/pack.signed/step3-pack.yml

  - job: osx_build_step4
    displayName: macOS Sign Installer
    pool:
      name: $(signPool)
    dependsOn: osx_build_step3
    steps:
      - template: templates/osx/pack.signed/step4-signpack.yml

  - job: osx_build_step5
    displayName: macOS Create Distribution
    pool:
      vmImage: $(osxImage)
    dependsOn: osx_build_step4
    steps:
      - template: templates/osx/pack.signed/step5-dist.yml

  - job: win_functionaltest
    displayName: Windows Functional Test
    timeoutInMinutes: 45
    variables:
      configuration: Release
    pool:
      vmImage: $(winImage)
    dependsOn: win_build
    condition: succeeded()
    steps:
      - checkout: none
      - template: templates/win/functional-test.yml
        parameters:
          useWatchman: false

  - job: win_functionaltest_watchman
    displayName: Windows Functional Test (with Watchman)
    timeoutInMinutes: 45
    variables:
      configuration: Release
    pool:
      vmImage: $(winImage)
    dependsOn: win_build
    condition: succeeded()
    steps:
      - checkout: none
      - template: templates/win/functional-test.yml
        parameters:
          useWatchman: true

  - job: osx_functionaltest
    displayName: macOS Functional Test
    timeoutInMinutes: 30
    pool:
      vmImage: $(osxImage)
    dependsOn: osx_build_step5
    condition: succeeded()
    steps:
      - checkout: none
      - template: templates/osx/functional-test.yml
        parameters:
          useWatchman: false

  - job: osx_functionaltest_watchman
    displayName: macOS Functional Test (with Watchman)
    variables:
      configuration: Release
    timeoutInMinutes: 30
    pool:
      vmImage: $(osxImage)
    dependsOn: osx_build_step5
    condition: succeeded()
    steps:
      - checkout: none
      - template: templates/osx/functional-test.yml
        parameters:
          useWatchman: true

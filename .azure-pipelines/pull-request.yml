trigger:
  - master
  - releases/*

pr:
  - master
  - milestones/*
  - releases/*
  - servicing/*

variables:
  branchCounter: $[counter(variables['Build.SourceBranch'], 0)]

jobs:
  - job: Windows_Build_and_UnitTests
    variables:
      platformFriendlyName: Windows
    strategy:
      maxParallel: 2
      matrix:
        debug:
          configuration: Debug
        release:
          configuration: Release
    pool:
      vmImage: vs2017-win2016
    steps:
    - powershell: $(Build.Repository.LocalPath)/Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter)
      displayName: "Compute product version"
    - template: templates/windows-build-and-unit-test.yml

  - job: macOS_Build_and_UnitTests
    variables:
      platformFriendlyName: macOS
    strategy:
      maxParallel: 2
      matrix:
        debug:
          configuration: Debug
        release:
          configuration: Release
    pool:
      name: 'Hosted macOS'
    steps:
    - powershell: $(Build.Repository.LocalPath)/Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter)
      displayName: "Compute product version"
    - template: templates/macos-build-and-unit-test.yml

  - job: macOS_FunctionalTests
    variables:
      platformFriendlyName: macOS
      configuration: Release
    timeoutInMinutes: 30
    pool:
      name: 'Hosted macOS'
    dependsOn: macOS_Build_and_UnitTests
    condition: succeeded()
    steps:
      - checkout: none # Use the drop from macOS_Build_and_UnitTests job
      - template: templates/macos-functional-test.yml

  - job: Windows_FunctionalTests
    timeoutInMinutes: 30
    variables:
      platformFriendlyName: Windows
      configuration: Release
    pool:
      vmImage: vs2017-win2016
    dependsOn: Windows_Build_and_UnitTests
    condition: succeeded()
    steps:
    - checkout: none # We'll get the build drop from Windows_Build_and_UnitTests job
    - template: templates/windows-functional-test.yml

  - job: macOS_FunctionalTests_with_cache
    variables:
      platformFriendlyName: macOS
      configuration: Release
    timeoutInMinutes: 30
    pool:
      name: 'GVFS'
    dependsOn: macOS_Build_and_UnitTests
    condition: succeeded()
    steps:
      - checkout: none # Use the drop from macOS_Build_and_UnitTests job
      - template: templates/macos-functional-test-with-cache.yml
